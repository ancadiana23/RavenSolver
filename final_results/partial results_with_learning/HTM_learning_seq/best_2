    """
    Define, train and test a network of spatial pooler and temporal memory layers
    """
    # dimenstions
    num_colls1 = len(problems[0]['Input'][0])
    num_colls2 = num_colls1 / 2

    #num_colls2 = min([num_colls1, num_colls3]) + abs(num_colls1 - num_colls3) / 2

    # layers
    sp1 = SpatialPooler(inputDimensions=(num_colls1, ),
                        columnDimensions=(num_colls2, ),
                        numActiveColumnsPerInhArea=-1,
                        localAreaDensity=0.05)
    '''
    sp2 = SpatialPooler(inputDimensions=(num_colls2, ),
                        columnDimensions=(num_colls3, ),
                        numActiveColumnsPerInhArea=-1,
                        localAreaDensity=0.05)
    '''
    #print(num_colls1, num_colls2, num_colls3)

    #minThr = int(numColls1 ** 0.33 / 2) + 3
    #actThr = int(numColls1 ** 0.33 / 2) + 3

    print(minThr, actThr) # 10 10
    bckTM = BTM(numberOfCols=num_colls2, cellsPerColumn=15,
                initialPerm=0.5, connectedPerm=0.5,
                minThreshold=minThr, newSynapseCount=10,
                activationThreshold=actThr,
                pamLength=10)

    layers = [(sp1, sp_compute),
              (bckTM, bk_tm_compute)]

    #layers = [(bckTM, bk_tm_compute)]

    #train_first_row(layers, problems)
    train(layers, problems)
    test(layers, problems)

===================================================
for i in np.random.permutation(len(problems)):
===================================================


---------------------- Agent ------------------------

(10, 10)
[ 1.00000001  1.00000003  1.00000002  0.99319726  0.99999993  1.00000006
  0.          0.99193545  1.          0.99184634  0.99501565  0.99999999
  0.99999992  0.99999997  0.98747744  0.9818873   0.99999998  0.9755728   1.
  0.99999995  0.99242427  1.00000006  0.98593189  0.86614748  1.00000003
  1.          0.99999998  0.99629527]
(27, 28)
95.5633253965

real	15m32.009s
user	15m11.212s
sys	0m0.956s
anca@Blue:~/Current_Semester/Licenta/RavenSolver$ time python2 main/agent.py
(10, 10)
[ 0.99999997  0.98509317  1.00000005  1.00000005  0.98423982  1.00000002
  0.9706983   0.98561153  0.9849257   0.99480486  0.99999995  0.99230775
  0.98116727  0.99204287  1.          0.99999998  0.99999994  0.99999994
  0.99999991  0.99999992  1.00000004  0.84064557  0.99999994  0.98718213
  0.99999998  0.9849257   0.99999987  0.99999995]
(28, 28)
98.8701577897

real	17m43.915s
user	17m16.824s
sys	0m2.828s



---------------------- SDRs ------------------------

(10, 10)
[ 0.95454548  0.8571429   0.95238097  1.00000001  0.95734167  0.99999994
  1.00000001  0.90476185  0.90000001  1.00000001  0.99999994  0.99999994
  1.00000002  0.94117647  1.00000002  0.71428567  1.00000002  1.00000001
  0.90476192  0.95856359  0.87816536  0.99999994  0.          0.99999994
  1.          0.90000001  1.          0.94402005]
(27, 28)
92.0255205727

real	3m19.168s
user	2m57.960s
sys	0m0.644s
anca@Blue:~/Current_Semester/Licenta/RavenSolver$ time python2 main/agent.py --data sdrs
(10, 10)
[ 0.9616759   1.00000004  0.94999994  0.99999993  0.96004606  0.94999994
  0.91367744  0.95238097  1.00000003  1.00000003  1.00000003  0.93969341
  1.00000002  1.00000001  0.94999994  1.00000001  0.95778027  0.72727269
  0.9545454   0.96322118  1.00000002  0.85714287  0.99999994  0.94658341
  1.00000001  1.00000003  1.00000004  1.00000003]
(28, 28)
96.3714986108

real	2m22.604s
user	2m19.144s
sys	0m0.372s



---------------------- Symbolic ------------------------


(10, 10)
[ 1.00000006  0.99999994  1.00000003  1.00000001  0.99999998  1.00000002
  1.00000003  0.90000001  1.00000003  0.97111932  1.00000007  0.8876924   0.
  0.99999994  0.99999998  0.91666669  1.00000004  0.87499995  0.99999998
  0.99999994  1.00000005  1.00000004  0.99999995  1.00000002  1.00000003
  0.97924843  1.00000003  1.00000005]
(27, 28)
94.7490250492

real	2m27.143s
user	2m9.104s
sys	0m0.504s
anca@Blue:~/Current_Semester/Licenta/RavenSolver$ time python2 ./main/agent.py --data symbolic
(10, 10)
[ 1.00000001  1.          1.00000005  1.00000004  0.          1.00000002
  1.00000002  0.          0.99999994  0.99999994  1.00000004  0.99999994
  0.          0.96983809  0.99999998  0.99999998  0.99999994  1.00000003
  1.00000001  0.99999998  1.          1.00000003  1.00000003  0.99999994
  0.99999994  0.99999999  1.00000007  1.00000004]
(25, 28)
89.1779930198

real	1m40.158s
user	1m36.400s
sys	0m0.396s


